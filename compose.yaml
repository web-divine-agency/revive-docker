# Build the image
#   docker compose up --build -d

# start a container
#   docker compose up --watch

# Stop containers
#   docker compose stop

# Terminate containers to free space
#   docker compose down

# Execute commands on docker contained
#   docker exec <service> <command>
#   docker exec mrc-admin npm install

services:
  # Admin portal
  revive-admin-v2:
    container_name: revive-admin-v2
    image: revive-admin-v2
    build:
      context: ./../revive-admin-v2
      dockerfile: Dockerfile
    ports:
      - ${HTTP_PORT_ADMIN}:${HTTP_PORT_ADMIN}
    develop:
      watch:
        - action: sync
          path: ./../revive-admin-v2
          target: /var/www/revive-admin-v2
    volumes:
      - admin-v2:/var/www/revive-admin-v2

  # User Service
  revive-user-service:
    container_name: revive-user-service
    image: revive-user-service
    build:
      context: ./../revive-user-service
      dockerfile: Dockerfile
    ports:
      - ${HTTP_PORT_USERS}:${HTTP_PORT_USERS}
      - ${HTTPS_PORT_USERS}:${HTTPS_PORT_USERS}
    develop:
      watch:
        - action: sync+restart
          path: ./../revive-user-service
          target: /var/www/revive-user-service
    volumes:
      - user-service:/var/www/revive-user-service
    depends_on:
      - revive-database
    links:
      - revive-database

  # Ticket Service
  revive-ticket-service:
    container_name: revive-ticket-service
    image: revive-ticket-service
    build:
      context: ./../revive-ticket-service
      dockerfile: Dockerfile
    ports:
      - ${HTTP_PORT_TICKETS}:${HTTP_PORT_TICKETS}
      - ${HTTPS_PORT_TICKETS}:${HTTPS_PORT_TICKETS}
    develop:
      watch:
        - action: sync+restart
          path: ./../revive-ticket-service
          target: /var/www/revive-ticket-service
    volumes:
      - ticket-service:/var/www/revive-ticket-service
    depends_on:
      - revive-database
    links:
      - revive-database

  # Branch service
  revive-branch-service:
    container_name: revive-branch-service
    image: revive-branch-service
    build:
      context: ./../revive-branch-service
      dockerfile: Dockerfile
    ports:
      - ${HTTP_PORT_BRANCHES}:${HTTP_PORT_BRANCHES}
      - ${HTTPS_PORT_BRANCHES}:${HTTPS_PORT_BRANCHES}
    develop:
      watch:
        - action: sync+restart
          path: ./../revive-branch-service
          target: /var/www/revive-branch-service
    volumes:
      - branch-service:/var/www/revive-branch-service
    depends_on:
      - revive-database
    links:
      - revive-database

  # Logger service
  revive-logger-service:
    container_name: revive-logger-service
    image: revive-logger-service
    build:
      context: ./../revive-logger-service
      dockerfile: Dockerfile
    ports:
      - ${HTTP_PORT_LOGS}:${HTTP_PORT_LOGS}
      - ${HTTPS_PORT_LOGS}:${HTTPS_PORT_LOGS}
    develop:
      watch:
        - action: sync+restart
          path: ./../revive-logger-service
          target: /var/www/revive-logger-service
    volumes:
      - logger-service:/var/www/revive-logger-service
    depends_on:
      - revive-database
    links:
      - revive-database

  # Resource service
  revive-resource-service:
    container_name: revive-resource-service
    image: revive-resource-service
    build:
      context: ./../revive-resource-service
      dockerfile: Dockerfile
    ports:
      - ${HTTP_PORT_RESOURCES}:${HTTP_PORT_RESOURCES}
      - ${HTTPS_PORT_RESOURCES}:${HTTPS_PORT_RESOURCES}
    develop:
      watch:
        - action: sync+restart
          path: ./../revive-resource-service
          target: /var/www/revive-resource-service
          ignore:
            - src/uploads
    volumes:
      - resource-service:/var/www/revive-resource-service
      - ./../revive-resource-service/src/uploads:/var/www/revive-resource-service/src/uploads
    depends_on:
      - revive-database
    links:
      - revive-database

  # Revive Database
  revive-database:
    container_name: revive-database
    image: revive-database
    build:
      context: ./mysql
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    volumes:
      - mysql:/var/lib/mysql
      - ./mysql:/etc/mysql/conf.d

volumes:
  admin-v2: {}
  user-service: {}
  ticket-service: {}
  branch-service: {}
  logger-service: {}
  resource-service: {}
  mysql: {}
